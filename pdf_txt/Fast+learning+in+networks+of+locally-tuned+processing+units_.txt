Trainingwithout data: KnowledgeInsertion into RBF Neural Networks
KenMcGarry and Stefan Wermter
Universityof Sunderland
Department of Computing and Technology
DavidGoldman Informatics Centre, St Peters Campus, St Peters Way,SR6 ODD
ken.mcgarry@sunderland.ac.uk,www.his.sunderland.ac.uk
Abstract
Amajorproblemwhendevelopingneuralnetworks
for machine diagnostics situations is that no data
or very little data is available for training on fault
conditions. However, the domain expert often has
a good idea of what to expect in terms of input
and output parameter values. If the expert can ex-
press these relationships in the form of rules, this
would provide a resource too valuable to ignore.
Fuzzy logic is used to handle the imprecision and
vaguenessofnaturallanguageandprovidesthisad-
ditional advantage to a system. This paper inves-
tigates the development of a novel knowledge in-
sertion algorithm that explores the beneﬁts of pre-
structuring RBF neural networks by using prior
fuzzy domain knowledge and previous training ex-
periences. Pre-structuring is accomplished by us-
ingfuzzyrulesgainedfromadomainexpertandus-
ing them to modify existing Radial Basis Function
(RBF) networks. The beneﬁts and novel achieve-
ments of this work enable RBF neural networks to
be trained without actual data but to rely on input
to output mappings deﬁned through expert knowl-
edge.
1 Introduction
Radial Basis Function (RBF) neural networks are a form of
local learning and are an efﬁcient alternative to Multi-layer
Perceptron (MLP) neural networks. In this paper we investi-
gate how symbolic knowledge can be inserted into an RBF
network, the advantage being to capitalize on those situa-
tions where no training data exists but an domain expert may
be able to formulate IF..THEN rules. Figure 1 presents an
overview of a much larger system that was developed, the
work on rule extraction and knowledge transfer described
elsewhere. It is the module related to the synthesis of RBF
networksthat is the focus of this paper.
Neural networks, like any other inductive learning algo-
rithmsuchasdecisiontreesandclusteringtechniquesaredata
driven. Without a sufﬁcient supply of training data these al-
gorithms cannot be used to produce a reliable model of the
problem domain. In such cases, the usual solution to these
problems range from duplicating data with additional noise
No data
available but
domain
knowledge
existsData
A suitable RBF network
parameters modified
by domain knowledgeNew RBF network
trained on data +
extracted rules
EXTRACT RULES
RBF
Extracted
Rule
BaseSYNTHESIZE RBF's
RBFTRANSFER RBF's
RBF
RBF LIBRARYRBF 1
RBF 2
RBF nNew RBF network
trained on dataRich data setSparse
data setFuzzy
rules10011101110110
11001000100101
10010101110001
IF<x & y>
THEN zFigure1: Overviewof Architectural Transformations
added or to simulate the data. The extraction of knowledge
in the form of rules has been successfully explored before
onRBFnetworksusingthe hREXalgorithm [McGarry etal.,
2001]. This work inspired the authors to develop knowledge
synthesis or knowledge insertion by manipulating the RBF
network parameters but information ﬂow/extraction was in
the opposite direction.
Domain experts often express their knowledge in vague
and imprecise linguistic terms. It is therefore a natural step
to use the ability of fuzzy sets and fuzzy logic to model this
imprecision. Fuzzy sets and rules created by the knowledge
elicitated from a domain expert are used to manipulate the
parameters of selected RBF hidden units. Knowledge syn-
thesisisatechniquetobeusedinthosesituationswheredata
for training is unavailable but speciﬁc knowledge about the
application is at hand. Converting the fuzzy rules into RBF
networkformatavoidstheintegrationissueofassigningcon-ﬁdencefactorswheninterpretingconﬂictingmoduleoutputs.
Therefore,thelocalrepresentationcharacteristicsoftheRBF
networks are used to integrate hidden units placed by data
drivenlearning with artiﬁcially synthesized hidden units.
The remainder of this paper is structured as follows: sec-
tion two describes the Radial Basis Function neural network,
andthehowcertainfunctionalequivalencestofuzzysystems
areexploited. Sectionthreedescribestheworkonknowledge
synthesis for RBF networks for improved performance. Sec-
tion four outlines the details of the fuzzy system employed
andhowitintegratesthedomainruleswiththeRBFnetwork.
Section ﬁve discusses the experimental results. Section six
provides a brief overview of the related work and ﬁnally sec-
tionsevenpresentstheconclusionsandareasforfuturework.
2 Radial Basis Function Networks
Radialbasisfunction(RBF)neuralnetworksareamodelthat
has functional similarities found in many biological neurons.
Inbiologicalnervoussystemscertaincellsareresponsivetoa
narrowrangeofinputstimuli,forexampleintheearthereare
cochlearstereocillacellswhicharelocallytunedtoparticular
frequencies of sound [Moody and Darken, 1989 ]. The RBF
network consists of a feedforward architecture with an input
layer, a hidden layer of RBF “pattern” units and an output
layeroflinearunits. Theinputlayersimplytransferstheinput
vectortothehiddenunits,whichformalocalizedresponseto
the input pattern. The activation levels of the output units
provide an indication of the nearness of the input vector to
the classes. Learning is normally undertaken as a two-stage
process.
The radial basis functions in the hidden layer are imple-
mented by kernel functions, which operate over a localized
area of input space. The effective range of the kernels is de-
terminedbythevaluesallocatedtothecentreandwidthofthe
radial basis function. The Gaussian function has a response
characteristic determined by equation 1.
Zj(x) =expÃ
¡jjx¡¹jj2
¾2
j!
(1)
where: ¹= n-dimensional parameter vector, ¾= width of
receptiveﬁeld, and x= input vector.
The response of the output units is calculated using equa-
tion 2.
JX
j=lWljZj(x) (2)
where:W= weight matrix, Z= hidden unit activations and
x=input vector.
RBF networks are an appropriate choice for both classiﬁ-
cation tasks and function approximation. It is interesting to
note that already Jang [Jang and Sun, 1993 ]discovered cer-
tain functional similarities exist between RBF networks and
fuzzy systems. Jang identiﬁed ﬁve criteria that are necessary
for the twotechniques to become functionally equivalent.
1.The number of RBF units must be equal to the number
of fuzzy rules.2.The output of each fuzzy rule is a constant.
3.The membership functions within each rule are gaus-
sians with the same widths.
4.Thet-normoperatorcomputestheﬁringstrengthofeach
rule through multiplication.
5.The RBF network and the fuzzy inference system both
use either normalized or unnormalized output calcula-
tions.
Themainadvantageofthefunctionalequivalencerelation-
ship is the ability of using one model’s learning rules for the
other and vice-versa. Other Fuzzy-RBF researchers [Huntet
al., 1996; Halgamuge, 1997 ]have extended Jang’s work to
produce hybrid learning models. Fuzzy models are generally
robust when faced with noisy and missing data and are more
comprehensible than a purely neural network approach [Sun,
1994].
3 KnowledgeSynthesis
Knowledge synthesis is a technique intended for those situ-
ations in which no actual training data is available but some
form of domain knowledge is at hand. The experts knowl-
edge is encoded as fuzzy sets and rules which are used to
synthesize new hidden unit parameters for incorporation into
a new or existing network. The fuzzy rules describe a set
of output classes and the possible input values denoting their
characteristics(basedontheexpertsopinions). Theobjective
of converting from fuzzy rules to RBF networks is to have
the knowledge in a consistent format. It would be possible
to have the domain knowledge in the form of a stand-alone
fuzzymodule,interactingwiththeRBFbasedsysteminsome
loosely or tightly coupled protocol. However, by converting
thefuzzyrulesintoanRBFarchitecturetheycanbesubjected
tofurtheranalysisbyruleextractionanditalsoavoidshybrid
system integrationissues.
The RBF hidden layer parameters (spread and centre val-
ues) can be converted from fuzzy sets by the rule deﬁned by
[Jangand Sun, 1993 ]:
¹A1(x1) =exp[¡(x1¡cA1)2
¾2
1] (3)
Where: ¹A1(x1)isthefuzzylinguisticlabelscontainingthe
domain knowledge, cis the centre of the receptive ﬁeld i.e.
the RBF function, ¾2
1is the RBF spread. Modiﬁcation of the
RBFoutputlayerparameterswasaccomplishedbyuseofthe
pseudoinversematrix XP[Kubat,1998 ].
W= (XTX)¡1XTC=XPC (4)
Where: Cis the classiﬁcation matrix containing class la-
bels,Wis the hidden-to-output unit weight matrix, Xis the
matrix containing the converted information from fuzzy sets
(gainedfrom eqn 3).
3.1 The ProblemDomain
An industrial machine vibration data set was chosen because
of the availability of several domain rules relating spectral
data to fault conditions. This knowledge is available in textbooks,journalsandrulestakenfromalargeEuropeancollab-
orativeproject.
Acommonproblemencounteredwithmanydiagnosticap-
plications is the lack of data for certain system conditions
especially fault situations. The diagnosis data obtained for
theexperimentalworkdescribedinthispaperovercamesuch
problems by using a mixture of simulated and test rig data.
This data enabled an experiment to be conducted which as-
sumed that data collected at low motor speeds was available
but not at high speeds. At high motor speeds the values of
several input features can be expected to change (increase or
decrease) also the severity of the faults may appear different.
However, by using vibration theory heuristics it was possible
to predict how certain parameters and fault conditions would
behave at higher speeds. The following method was used for
the vibration data experiment:
3.2 Methodology
1.Thevibrationdatawasdividedintotwogroups,i. motor
speedclassedaslowandii. motorspeedclassedashigh.
2.An RBF network was trained on the low speed data and
the accuracy was examined with a separate low speed
test data.
3.The RBF network was tested with the high speed data
(i.e. thedataitwas nottrainedon)andtheaccuracywas
noted.
4.The domain rules were converted into fuzzy sets and
fuzzy rules.
5.ThehREX algorithm was used to assign hidden units to
the output classes.
6.For each of the three fault classes considered the hidden
unitsassignedtothemwereduplicatedandmodiﬁedus-
ing the fuzzy inferencing system.
7.The modiﬁed RBF network had its hidden-to-output
weights and biases recalculated.
8.The modiﬁed network was re-tested on the high speed
data and the accuracynoted.
The vibration data was divided into two sets based on the
speed of the motor: low speed data consisting of examples
with motor speeds of 500-1000 RPM (rotations per minute)
and high speed data containing data from motor speeds of
1500-2000 RPM. However, both sets of data still consisted
of 11 input features and eight output classes. An RBF net-
work was trained on the low speed data and its accuracy was
observed on both low speed and high speed test data. The
resultsare shownin ﬁgure 2.
The RBF network trained on low speed data has an accu-
racy 90% on the low speed test set. Unfortunately, the accu-
racy falls dramatically to 51.3% when introduced to the high
speed data. This is a common phenomena that RBF neural
networks can generate well to new patterns only if they stem
from the same distribution of input patterns. If the task is
very different they do not generalise well. The unreliability
of such a classiﬁer would prevent it from being deployed in
any application running at high speed. Therefore, a substan-
tial increase in accuracy is required for knowledge synthesis
tobe of practical use.
Original network accuracy on
low speed data109 0 5 2 0 0 0 5
11 31 0 0 0 0 0 0
0 0 53 0 0 0 0 0
2 0 0 24 0 0 0 1
0 0 0 0 38 0 0 0
0 0 0 0 0 15 2 0
0 0 0 0 0 5 27 0
2 0 0 1 0 0 0 31Classification rate: 90%
Original network accuracy on
 high speed data594 6 15 9 0 2 16 25
99 0 0 0 0 0 0 0
155 0 0 0 0 0 37 0
104 0 0 0 0 0 0 0
95 0 0 0 0 0 0 0
46 0 0 1 12 33 0 2
16 0 0 1 0 1 78 0
36 0 0 1 0 0 24 38Classification rate: 51.3%Figure 2: Confusion matrix showing accuracy of the original
RBF network. The numbers represent test cases and those
lying on the diagonal have been classiﬁed accurately, while
those off the diagonal have been misclassiﬁed. The accu-
racy of the RBF network trained on low speed data is 90.0%,
but when introduced to test data with high speed characteris-
tics, accuracy falls to 51.3%. High speed training data is not
available, thus motivating the need to integrate some form of
knowledgeinsertion.
Although the original RBF uses 11 input parameters only
threeparameterswereusedintheexperimentalwork. Thisis
because the majority of heuristic rules use only these (rpm1,
rpm2 and rpm3) parameters because most faults can be iden-
tiﬁed by them. In addition, only three machine conditions
were considered: unbalance, misalignment and looseness.
4 Deﬁning the Fuzzy System
Theknowledgeforthefuzzysystemwasobtainedfromado-
main expert and the available machine fault diagnosis liter-
ature. The fuzzy rules, sets and membership functions were
manually developedthrough a process of trial and error.
4.1 Deﬁning the fuzzy sets
A number of criteria were under consideration for the con-
struction of the fuzzy sets.
²Typeofmembershipfunction(Gaussian,triangularetc).
²Number of membership functions per set.
²Number of rules to required to cover the intended in-
put/output space.
²Defuzziﬁcation method used.
The type of membership function to be used proved not to
be critical, as the set for the motor speed uses triangular but
similar results were achieved for Gaussian. As long as thereis some overlap between the membership functions then the
actualtypeoffunctiondoesnotappeartoaffecttheresultsto
anygreat extent(this is true for the vibration domain).
The motor speed fuzzy set was used as an input to the in-
ferencing system. Triangular functions were used with the
apex of the triangle at the mid-value of the set. The “slow”
membership function is present only for completeness as it
did not participate in the fuzzy inferencing process. Figure 3
shows the membership functions for the fault severity. This
set was used as an input to the system and the values for the
membershipweredeterminedbythedomainexpertsbeliefas
how much a fault has to be present (percentage) to constitute
a problem. In ﬁgure 3 the looseness fault can be seen as a
major problem for the motor since only a small amount of
looseness is required to be classed as a serious fault. Loose-
ness refers to the amount of physical movement experienced
bythemotorandusuallyindicatesthatthemountingboltsare
notsecure.
0 10 20 30 40 50 60 70 80 90 10000.51
unbalanceDegree of membershipnone minor substantial severe
0 10 20 30 40 50 60 70 80 90 10000.51
misalignmentDegree of membershipnone minor substantial severe
0 10 20 30 40 50 60 70 80 90 10000.51
loosenessDegree of membershipnone minor substantial severe
Figure3: Fuzzy sets deﬁning the faultseverity
Figure 4 shows the membership functions for the rpm pa-
rameters. Thesefuzzysetswereusedasoutputsbythesystem
and the values for the rpm parameters were calculated by the
inferencing system. Those values were then used to modify
the centre positions of the new RBF hidden units. The mem-
bership values were mainly based on averages of both sim-
ulated and test-rig high speed data. The diagnostic system
used rules based on testing the ratios of the rpm parameters
as opposed to absolute values. Some of these rules provided
useful information that was incorporated into the fuzzy rules
todetermine the rpm parameter values.
4.2 Deﬁning the fuzzy rules
Figure 5 shows 10 of the 18 rules for the three fault condi-
tions: unbalance, misalignment and looseness. Rule 19 was
present to prevent the fuzzy system from making a decision
when no fault conditions were present. Each fuzzy rule con-
sisted of an antecedent and consequent. The antecedent was
0 0.5 1 1.5 2 2.5 3 3.5 400.51
rpm2Degree of membershipnone vsmall small subs vsubs large vlarge
Degree of membership0 5 10 15 20 2500.51
rpm1Degree of membershipnonevsmallsmall subs vsubs large vlarge
0 0.5 1 1.5 2 2.500.51
nonevsmallsmall subs vsubs large vlarge
rpm3Figure 4: Fuzzy sets deﬁning the parameter modiﬁcations
quitesimplecomparedwiththerulesextractedfromtheRBF
networks as there were only two input features i.e. the motor
speed and fault severity. The consequent was more complex
as it consisted of values assigned to the three output parame-
ters.
The structure of the rules were almost identical to the rea-
soningofthedomainexpert. Inadditiontocomprehensibility
there is also the added advantage of system maintainability.
Adding further fuzzy rules to cover extra conditions could
be easily made but without the problems of “side-effects”
that can be encountered in non-fuzzy systems i.e. adding
extra rules may cause unanticipated logic errors. Also the
coding complexity in non-fuzzy systems can be greatly in-
creased. This was avoided to a great extent with the fuzzy
system because a lot of the knowledge was encoded into the
fuzzy sets. Therefore, if required the fuzzy sets could be re-
calibrated/alteredtotakeadvantageofnewsituationswithout
recoding the rules.
4.3 Fuzzy InferencingSystem
The inferencing method used is the Mamdani method which
isthemostcommonlyusedmethodforthistypeoffuzzysys-
tem[Mamdani and Baakini, 1974 ]. It enabled multiple fuzzy
setstobeusedasoutputs(i.e. intheruleconsequents). These
fuzzysetsareeventuallyusedtomodifytheRBFinternalpa-
rameters (after defuzziﬁcation).
The system operates by combining the consequents from
each rule through the aggregation operator and returning a
defuzziﬁedfuzzysettoprovidethesystemoutput. Thefuzzy
Mamdani model is composed of rule sets of IF..THEN type
rules[Mitra and Hayashi, 2000 ].
In order to identify which particular hidden RBF units toRule 1: If (MSpeed is fast)and (unbalance is minor)
then(rpm1 is vsmall)(rpm2 is none)(rpm3 is none)
Rule 2: If (MSpeed is fast)and (unbalance is substantial)
then(rpm1 is small)(rpm2 is vsmall)(rpm3 is vsmall)
Rule 3: If (MSpeed is fast)and (unbalance is severe)
then(rpm1 is subs)(rpm2 is subs)(rpm3 is subs)
Rule 4: If (MSpeed is vfast)and (unbalance is minor)
then(rpm1 is vsubs)(rpm2 is vsubs)(rpm3 is vsubs)
Rule 5: If (MSpeed is vfast)and (unbalance is substantial)
then(rpm1 is large)(rpm2is large)(rpm3is large)
Rule 6: If (MSpeed is vfast)and (unbalance is severe)
then(rpm1 is vlarge)(rpm2is vlarge)(rpm3is vlarge)
Rule 7: If (MSpeed is fast)and (misalignment is minor)
then(rpm1 is small)(rpm2 is vsmall)(rpm3 is none)
Rule 8: If (MSpeed is fast)and (misalignment is substantial)
then(rpm1 is small)(rpm2 is vsmall)(rpm3 is vsmall)
Rule 9: If (MSpeed is fast)and (misalignment is severe)
then(rpm1 is subs)(rpm2 is subs)(rpm3 is subs)
Rule 10: If (MSpeed is vfast)and (misalignment is minor)
then(rpm1 is subs)(rpm2 is subs)(rpm3 is subs)
Figure 5: Fuzzy domain rules for machine vibration domain,
where:looseness,misalignment,unbalance arethefaultsthat
can be encountered by the machines, minor, substantial se-
vere,describetheextentofthefault, rpm1,rpm2,rpm3 arethe
parametersthatindicatethepresenceorabsenceofthefaults,
none, small, vsmall, subs are the amount of change required
to the parameters.
modify, the hREX algorithm was implemented [McGarry et
al., 2001]and was run on the RBF network which produced
a list of hidden units contributing to the identiﬁcation of the
three fault classes. Table 1 details the hidden unit allocations
for the classes.
Havingidentiﬁedtherelevanthiddenunits,theirassociated
centres,spreadsandhidden-to-outputunitweightsweremod-
iﬁed by the fuzzy inferencing system according to the values
of the fuzzy sets.
5 Analysis of KnowledgeSynthesis Results
Theresultsareshowninﬁgure6. Overall,animprovementof
25% was made with unbalance gaining 88 correct, misalign-
ment gaining 67 and looseness gaining 30 correct classiﬁca-
tions. The original RBF network had an overall tendency to
misclassify most examples as “ok” but now the domain rulesTable1: Identiﬁcation of hidden units with output classes
FaultClass hidden units responsiveto fault class
Unbalance 7, 9, 12, 13, 15, 23, 28, 31
Misalignment 3, 8, 15
Looseness 13, 14, 16, 21, 32
enabledtighterboundstobeplacedaroundthe“ok”category.
Original network accuracy on
 high speed data594 6 15 9 0 2 16 25
99 0 0 0 0 0 0 0
155 0 0 0 0 0 37 0
104 0 0 0 0 0 0 0
95 0 0 0 0 0 0 0
46 0 0 1 12 33 0 2
16 0 0 1 0 1 78 0
36 0 0 1 0 0 24 38Classification rate: 51.3%
Modified network accuracy on
 high speed data594 2 15 9 0 2 16 25
15 88 0 0 0 0 0 0
88 0 67 0 0 0 37 0
74 0 0 30 0 0 0 0
95 0 0 0 0 0 0 0
46 0 0 1 12 33 0 2
16 0 0 1 0 1 78 0
36 0 0 1 0 0 24 38Classification rate: 75.0%
Figure 6: Confusion matrix showing accuracy of the original
RBF network compared with synthesized RBF. The numbers
representtestcasesandthoselyingonthediagonalhavebeen
classiﬁed accurately, while those off the diagonal have been
misclassiﬁed. Theoriginalnetworkhasanaccuracyof51.3%
on the high speed data but when it is modiﬁed by inserting
domainrulesthatarecharacteristicofthenatureofhighspeed
data, the accuracygoes up to 75.0%.
The effects of the large number of shared hidden units
(33%) within the network are still an open issue. Theoreti-
cally, since each shared hidden unit is duplicated and modi-
ﬁed for each class there should be no undue interference ef-
fects. However, with additional rules these results could be
improved upon but obtaining such rules would be difﬁcult as
the inter-parameterrelationships are complex.
The existing rules cover a relatively simple input to output
space mapping that was common to most machine behavior
(generic) and was easy to produce from the knowledge ac-
quisitionprocess. Itwouldbepossibletoconductastatistical
analysisofthehighspeeddataforparticularrelationshipsand
then to produce rules which could be used on different types
of machines i.e. the analysis might have proved that certain
relationships exist between low and high speed data on ma-
chine “X” and then to have applied these rules to machine
“Y”. The difﬁculty of this approach is that of modelling the
speciﬁc data too closely and not the underlying relationships
(if theyexist).6 Related Workon KnowledgeSynthesis
Previous work involving assigning prior knowledge into lo-
cally responsive units used a Bayesian framework which en-
abled the incorporation of an inductive bias [Roscheisen et
al., 1994]. Other approaches have considered the problem in
terms of inserting symbolic rules into a RBF network [An-
drewsand Geva,1996; Tresp etal.,1997].
In the past researchers have attempted to incorporate do-
main knowledge in the form of fuzzy rules within a neural
network. Jin and Sendoff [Jin and Sendhoff, 1999 ]use fuzzy
rulesintheformofhintsasdescribedbyAbu-Mostafa [Abu-
Mostafa, 1993 ]. The “hint” is expressed as a fuzzy rule that
describesqualitivelythefunctiontobelearnedandisusedas
aregularizationtermbythelearningalgorithm. Narazakide-
scribes the use of fuzzy rules to manipulate the classiﬁcation
boundaries of the hidden units in a MLP network [Narazaki,
1996]. Casalino developed a fuzzy basis function (FBF) net-
work that has some similarity of operation with an RBF net-
work[Casalino et al., 1998]. However, the main conclusion
of Casalino work was to identify that the FBF characteristics
were closer to a competitive learning model than a feedfor-
ward. The work by Kishore [Kishore and Rao, 1997 ]has
the strongest similarities to the work presented in this paper.
However,Kishoredeﬁnedfuzzysetstorepresentthestep-size
of the learning rate for training RBF networks.
7 Conclusions
Knowledge synthesis i.e. the modiﬁcation of existing RBF
networksusingheuristicruleshasobviousbeneﬁtswhenused
in certain situations. The use of knowledge synthesis only
makes sense when the available data is insufﬁcient to build a
reliableclassiﬁer. Insuchasituationitisadvantageoustouse
heuristic rules to modify an existing RBF network to detect
infrequently encountered input vectors that would otherwise
be misclassiﬁed. However, care must be taken when apply-
ing the domain rules. Unless the domain rules can cover a
large proportion of the synthesized input to output space it is
likelythatnotallthenecessarycentrepositionswillbemoved
into appropriate locations. This effect will reduce the effec-
tiveness of the new centres. Fortunately, because of the local
characteristicsoftheRBFnetworktheexistingcentreswillbe
relatively unaffected and should still be able to classify with
thesame accuracybefore knowledgesynthesis occurred.
References
[Abu-Mostafa,1993 ]Y. Abu-Mostafa. Hints and the VC di-
mension. NeuralComputation 5 ,pages 278–288, 1993.
[Andrewsand Geva,1996 ]R. Andrews and S. Geva. Rules
and local function networks. In Rules and Networks-
Proceedings of the Rule Extraction From Trained Artiﬁ-
cialNeuralNetworksWorkshop,ArtiﬁcialIntelligenceand
Simulationof Behaviour ,Brighton UK, 1996.
[Casalinoet al., 1998]F. Casalino, F. Masulli, and A. Sper-
duti. Rule specialization in networks of fuzzy basis
functions. Intelligent Automation and Soft Computing ,
4(1):73–82,1998.[Halgamuge,1997 ]S.Halgamuge. Self-evolvingneuralnet-
works for rule-based data processing. IEEE Transactions
onSignal Processing ,45(11):2766–2773, 1997.
[Huntetal.,1996]K. J. Hunt, R. Haas, and R. Murray-
Smith. Extending the functional equivalence of radial ba-
sis function networks and fuzzy inference systems. IEEE
Transactions on Neural Networks , 7(3):776–781, May
1996.
[Jangand Sun, 1993 ]J.S.R.JangandC.T.Sun. Functional
equivalence between radial basis function networks and
fuzzy inference systems. IEEE Transactions Neural Net-
works,4(1):156–159, January 1993.
[Jinand Sendhoff,1999 ]Y.JinandB.Sendhoff. Knowledge
incorporationintoneuralnetworksfromfuzzyrules. Neu-
ralProcessingLetters , 10:231–242, 1999.
[Kishoreand Rao, 1997 ]A. V. Kishore and M. V. Rao. A
novel based algorithm for radial basis function network.
InProceedings of the IEEE International Conference on
NeuralNetworks , volume489, pages 2007–2011, 1997.
[Kubat,1998 ]M. Kubat. Decision trees can initialize radial
basis function networks. IEEE Transactions on Neural
Networks , 9(5):813–821, 1998.
[Mamdaniand Baakini, 1974 ]E. H. Mamdani and Baakini.
Prescriptivemethodforderivingcontrolpolicyinafuzzy-
logic controller. Electronics Letters , 11(25/26):625–626,
1974.
[McGarry et al., 2001]K.McGarry,S.Wermter,andJ.Mac-
Intyre. Knowledge extraction from local function net-
works. In Seventeenth International Joint Conference on
Artiﬁcial Intelligence , volume 2, pages 765–770, Seattle,
USA,August 4th-10th 2001.
[Mitraand Hayashi, 2000 ]S. Mitra and Y. Hayashi. Neuro-
fuzzy rule generation: survey in soft computing frame-
work.IEEETransactionsonNeuralNetworks ,11(3):748–
768,2000.
[Moodyand Darken,1989 ]J.MoodyandC.J.Darken. Fast
learning in networks of locally tuned processing units.
NeuralComputation , pages 281–294, 1989.
[Narazaki,1996 ]H. Narazaki. Reorganizing knowledge in
neural networks: An explanatory mechanism for neural
networks in data classiﬁcation problems. IEEE Transac-
tions on Systems, Man and Cybernetics , 26(1):107–117,
1996.
[Roscheisen etal.,1994]M. Roscheisen, R. Hofmann, and
V. Tresp. Incorporating prior knowledge into networks of
locally-tunedunits.In ComputationallearningTheoryand
NaturalLearningSystems ,volumeIII,pages53–64.1994.
[Sun,1994 ]C. T. Sun. Rule-base structure identiﬁcation in
an adaptive-network-based fuzzy inference system. IEEE
Transactionson Fuzzy Systems ,2(1):64–73, 1994.
[Trespetal.,1997]V.Tresp,J.Hollatz,andS.Ahmad. Rep-
resentingprobabilisticruleswithnetworksofgaussianba-
sisfunctions. MachineLearning , 27:173–200, 1997.